allprojects {
    defaultTasks 'clean', 'build'
}

subprojects { subprojects ->

    apply plugin: 'maven'
    apply plugin: 'war'
    apply plugin: 'jetty'


    group = 'org.suggs.build-sandbox'
    version = '1.0-SNAPSHOT'
    buildDir = 'target'

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        compile "org.slf4j:slf4j-api:$slf4jVersion"

        runtime "org.slf4j:slf4j-log4j12:$slf4jVersion"
        runtime "log4j:log4j:$log4jVersion"

        testCompile "junit:junit:$junitVersion"
        testCompile "org.mockito:mockito-all:$mockitoVersion"
        testCompile "org.jbehave:jbehave-core:$jbehaveVersion"
        testCompile "org.seleniumhq.selenium:selenium-java:$seleniumVersion"
        testCompile "org.seleniumhq.selenium:selenium-api:$seleniumVersion"
        testCompile "org.concordion:concordion:$concordionVersion"
        testCompile "org.concordion:concordion:$concordionVersion"
        testCompile "org.agileinsider:concordion-plus:$concordionPlusVersion"
    }

    manifest.mainAttributes (
            provider: 'gradle'
    )

    test {
        include '**/*Test.*'
        exclude '**/*WebTest.*'
    }

    task webTest(type: Test, dependsOn: test) {

        systemProperties 'concordion.output.dir': file("${buildDir}/concordion")

        include '**/*WebTest.*'
        include '**/*Scenario.*'

        doFirst {
            logger.quiet("Starting the jetty webserver with web app")
            jettyRunWar.daemon = true
            jettyRunWar.execute()
        }
        doLast {
            logger.quiet "Stopping jetty web application"
            jettyStop.execute()
        }
    }
}

project("build-pipeline") {

    description = "A working example of how to do functional testing against a web application"
    dependencies {
        compile "org.springframework:spring-webmvc:$springVersion"
        compile "org.springframework:spring-oxm:$springVersion"

        runtime "org.codehaus.jackson:jackson-mapper-asl:$jacksonMapperVersion"
        runtime "com.thoughtworks.xstream:xstream:$xstreamVersion"
    }

    [jettyRun, jettyRunWar, jettyStop]*.httpPort = 9099
    [jettyRun, jettyRunWar, jettyStop]*.stopPort = 9099
    [jettyRun, jettyRunWar, jettyStop]*.stopKey = 'stopKey'
}

project("sandbox:sandbox-webservices:jax-ws-simple") {
    subprojects {
        //apply plugin: 'jaxws'
    }
}


project("sandbox:sandbox-webservices:jax-rs-simple") {
    subprojects {
        //apply plugin: 'jaxrs'
    }
}
