import static groovy.io.FileType.DIRECTORIES


allprojects {
    defaultTasks 'clean', 'build'
}

subprojects { subprojects ->

    apply plugin: 'war'
    apply plugin: 'idea'
    apply plugin: 'jetty'

    group = 'org.suggs.java-web'
    version = '1.0-SNAPSHOT'
    buildDir = 'target'

    repositories {
        mavenLocal()
        mavenCentral()
    }

    idea.module {
        downloadSources = true
    }

    configurations {
        wsimport
    }

    ext.genDir = "$buildDir/generated-src"
    sourceSets.main.java.srcDirs += genDir

    task wsimport(dependsOn: processResources) {
        ext.generatedJavaPackage = 'org.suggs.ws'
        doLast {
            file(genDir).mkdirs()
            sourceSets.main.output.classesDir.mkdirs()

            ant.taskdef(
                    name: 'wsimport',
                    classname: 'com.sun.tools.ws.ant.WsImport',
                    classpath: configurations.wsimport.asPath
            )

            sourceSets.main.output.resourcesDir.eachFileRecurse(DIRECTORIES) {
                it.eachFileMatch(~/.*\.wsdl/) { File file ->
                    println("Running wsimport for ${file}")
                    ant.wsimport(
                            keep: true,
                            package: generatedJavaPackage,
                            wsdl: file,
                            destDir: sourceSets.main.output.classesDir,
                            sourcedestdir: genDir
                    )
                }
            }
        }
    }

    task wsgen(dependsOn: processResources) {
        doLast {
            sourceSets.main.java.resourcesDir.mkdirs()
        }
    }

    dependencies {
        wsimport "com.sun.xml.ws:jaxws-tools:2.1.4"

        compile "org.slf4j:slf4j-api:$slf4jVersion"

        runtime "org.slf4j:slf4j-log4j12:$slf4jVersion"
        runtime "log4j:log4j:$log4jVersion"

        testCompile "junit:junit:$junitVersion"
        testCompile "org.mockito:mockito-all:$mockitoVersion"
    }

    jar {
        manifest {
            attributes 'Implementation-Title': description,
                    'Implementation-Version': version
        }
    }


    test {
        include '**/*Test.*'
        exclude '**/*WebTest.*'
    }

    jettyRunWar {
        daemon = true
        httpPort = 10989
    }

    task webTest(type: Test, dependsOn: jettyRunWar) {
        systemProperties 'concordion.output.dir': file("${buildDir}/concordion")

        [jettyRun, jettyRunWar, jettyStop]*.httpPort = 10099
        [jettyRun, jettyRunWar, jettyStop]*.stopPort = 10099
        [jettyRun, jettyRunWar, jettyStop]*.stopKey = 'stopKey'

        include '**/*WebTest.*'
        include '**/*Scenario.*'

        doLast {
            logger.quiet "Stopping jetty web application"
            jettyStop.execute()
        }
    }
}

project("build-pipeline") {

    description = "A working example of how to do functional testing against a web application"
    dependencies {
        compile "org.springframework:spring-webmvc:$springVersion"
        compile "org.springframework:spring-oxm:$springVersion"

        runtime "org.codehaus.jackson:jackson-mapper-asl:$jacksonMapperVersion"
        runtime "com.thoughtworks.xstream:xstream:$xstreamVersion"

        testCompile("org.concordion:concordion:$concordionVersion") { exclude group: "junit" }
        testCompile "org.agileinsider:concordion-plus:$concordionPlusVersion"
        testCompile "info.cukes:cucumber-junit:$cucumberVersion"
        testCompile "info.cukes:cucumber-java:$cucumberVersion"
        testCompile("org.jbehave:jbehave-core:$jbehaveVersion") { exclude group: "junit" }
        testCompile "org.seleniumhq.selenium:selenium-java:$seleniumVersion"
        testCompile "org.seleniumhq.selenium:selenium-api:$seleniumVersion"
    }
}

project("sandbox:sandbox-webservices:jax-rs-simple") {
    dependencies {
        compile "com.sun.jersey:jersey-bundle:1.17.1"
    }
}

project("sandbox:sandbox-webservices:jax-ws-simple:client") {
    wsimport.generatedJavaPackage = 'org.suggs.sandbox.jaxws.simple.client.bindings'
    compileJava.dependsOn wsimport
}

project("sandbox:sandbox-webservices:jax-ws-simple:service") {
}

project("sandbox:sandbox-webapps:jbehaveweb-test-webapp") {
    dependencies {
        testCompile "org.jbehave.web:jbehave-web-selenium:$jbehaveWebVersion"
    }
}

project("sandbox:sandbox-webapps:selenium-test-webapp") {
    dependencies {
        testCompile "org.seleniumhq.selenium:selenium-java:$seleniumVersion"
    }
}

project("sandbox:sandbox-webapps:spring-mvc-persistent-webapp") {
    dependencies {
        compile "org.springframework:spring-webmvc:$springVersion"
        compile "org.springframework:spring-oxm:$springVersion"
        compile "org.hibernate:hibernate-core:3.6.5.Final"
        compile "org.hibernate:hibernate-annotations:3.6.5-Final"


    }
}
