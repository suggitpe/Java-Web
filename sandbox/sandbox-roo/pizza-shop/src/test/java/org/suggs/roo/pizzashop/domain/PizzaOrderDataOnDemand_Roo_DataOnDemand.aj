// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.suggs.roo.pizzashop.domain;

import java.util.List;
import java.util.Random;
import org.springframework.stereotype.Component;
import org.suggs.roo.pizzashop.domain.PizzaOrder;

privileged aspect PizzaOrderDataOnDemand_Roo_DataOnDemand {
    
    declare @type: PizzaOrderDataOnDemand: @Component;
    
    private Random PizzaOrderDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<PizzaOrder> PizzaOrderDataOnDemand.data;
    
    public PizzaOrder PizzaOrderDataOnDemand.getNewTransientPizzaOrder(int index) {
        org.suggs.roo.pizzashop.domain.PizzaOrder obj = new org.suggs.roo.pizzashop.domain.PizzaOrder();
        java.lang.String address = "address_" + index;
        if (address.length() > 30) {
            address  = address.substring(0, 30);
        }
        obj.setAddress(address);
        obj.setDeliveryDate(new java.util.Date());
        obj.setName("name_" + index);
        obj.setTotal(new Integer(index).floatValue());
        return obj;
    }
    
    public PizzaOrder PizzaOrderDataOnDemand.getSpecificPizzaOrder(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        PizzaOrder obj = data.get(index);
        return PizzaOrder.findPizzaOrder(obj.getId());
    }
    
    public PizzaOrder PizzaOrderDataOnDemand.getRandomPizzaOrder() {
        init();
        PizzaOrder obj = data.get(rnd.nextInt(data.size()));
        return PizzaOrder.findPizzaOrder(obj.getId());
    }
    
    public boolean PizzaOrderDataOnDemand.modifyPizzaOrder(PizzaOrder obj) {
        return false;
    }
    
    public void PizzaOrderDataOnDemand.init() {
        data = org.suggs.roo.pizzashop.domain.PizzaOrder.findPizzaOrderEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'PizzaOrder' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<org.suggs.roo.pizzashop.domain.PizzaOrder>();
        for (int i = 0; i < 10; i++) {
            org.suggs.roo.pizzashop.domain.PizzaOrder obj = getNewTransientPizzaOrder(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
